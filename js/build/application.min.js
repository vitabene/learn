/* Vitezslav Benes 2015*/

function init(){generatePairs(),byId("pair-list").addEventListener("click",function(a){a.target&&"LI"===a.target.nodeName&&makeConnection(a.target)})}function makeVisualConnection(a,b){var c=a.getBoundingClientRect(),d=b.getBoundingClientRect(),e=byId("pair-list").getBoundingClientRect(),f=c.bottom-c.top,g=d.bottom-d.top,h={x:c.right,y:c.top+f/2},i={x:d.left,y:d.top+g/2},j=i.y-h.y,k=i.x-h.x,l=Math.sqrt(Math.pow(j,2)+Math.pow(k,2)),m=round(Math.asin(j/l)*(180/Math.PI),1),n={x:h.x+k/2-l/2-e.left,y:h.y+j/2-e.top+3},o=document.createElement("span");o.className="line";var p=a.id;return o.id="l"+p.substring(p.length-1),b.id="v"+p.substring(p.length-1),o.style.width=round(l,1)+"px",o.style.marginTop=round(n.y,1)+"px",o.style.marginLeft=round(n.x,1)+"px",o.style.webkitTransform="rotate("+m+"deg)",o.style.MozTransform="rotate("+m+"deg)",o.style.msTransform="rotate("+m+"deg)",o.style.OTransform="rotate("+m+"deg)",o.style.transform="rotate("+m+"deg)",o}function displayScore(){var a="Your score is "+round((pairDatabase.length-mistakes)/pairDatabase.length*100,2)+" % = "+(pairDatabase.length-mistakes)+" / "+pairDatabase.length;message(a)}function shuffleArray(a){for(var b,c,d=a.length;d;b=Math.floor(Math.random()*d),c=a[--d],a[d]=a[b],a[b]=c);return a}function getChildrenOfId(a){for(var b=byId(a).childNodes,c=[],d=-1,e=b.length;++d!==e;c[d]=b[d]);return c}function round(a,b){return Math.round(a*Math.pow(10,b))/Math.pow(10,b)}function byTag(a){return document.getElementsByTagName(a)}function byClassName(a){return document.getElementsByClassName(a)}function byId(a){return document.getElementById(a)}function clearClass(a){var b=byClassName(a);if(0!==b.length)for(var c=b.length-1;c>=0;c--)b[c].className=b[c].className.replace(a,"")}function message(a){var b=document.createElement("div");b.id="message";var c=document.createElement("span");c.innerHTML=a;var d=document.createElement("span");d.id="remove-message",d.innerHTML="X";var e=byTag("main")[0];return e.insertBefore(b,e.childNodes[0]),byId("message").appendChild(c),byId("message").appendChild(d),byId("remove-message").addEventListener("click",function(){byId("remove-message").parentNode.parentNode.removeChild(byId("remove-message").parentNode)}),!0}function removeTagWithClass(a){for(var b=document.getElementsByClassName(a);b[0];)b[0].parentNode.removeChild(b[0])}function arrayFromCollection(a){for(var b=[],c=0;c<a.length;c++){var d=[];d.push(a[c].dataset.a),d.push(a[c].dataset.b),b.push(d)}return b}function removeAllChildren(a){for(var b=byId(a);b.firstChild;)b.removeChild(b.firstChild);leftcol=document.createElement("ul"),rightcol=document.createElement("ul"),leftcol.id="leftcol",rightcol.id="rightcol",b.appendChild(leftcol),b.appendChild(rightcol)}function isKey(a){return"k"===a.id.substring(0,1)?!0:!1}function findKey(a,b){for(var c=0;c<a.length;c++)if(a[b])return a[b];return!1}function randomIndexesFromDB(a,b,c){for(var d=[];a!==d.length;){var e=Math.floor(Math.random()*b.length);-1===d.indexOf(e)&&-1===c.indexOf(e)&&(d.push(e),c.push(e))}return d}function pairArrayFromIndexes(a,b){for(var c=[],d=0;d<a.length;d++){var e=new Pair(b[a[d]][0],b[a[d]][1]);c.push(e)}return c}function Pair(a,b){this.createLiNode=function(a){var b=document.createElement("li");return b.innerHTML=a,b},this.setValue=function(a){this.assignedValue=a},this.check=function(){return this.valueNode.innerHTML===this.assignedValue?(this.markCorrect(),this.moveUp(),!0):(this.highlightMistake(),!1)},this.drawLine=function(a,b){this.line=b,a.appendChild(this.line)},this.removeLine=function(){this.line.parentNode.removeChild(this.line)},this.moveUp=function(){var a=this.keyNode.parentNode;a.removeChild(this.keyNode),a.insertBefore(this.keyNode,a.childNodes[0]);var b=this.valueNode.parentNode;b.removeChild(this.valueNode),b.insertBefore(this.valueNode,b.childNodes[0])},this.markCorrect=function(){this.keyNode.className="correct",this.valueNode.className="correct"},this.highlightMistake=function(){this.keyNode.className="mistake",this.valueNode.className="mistake"},this.keyNode=this.createLiNode(a),this.valueNode=this.createLiNode(b),this.assignedValue,this.line}function makeConnection(a){if("selected"!==a.className?a.className="selected":a.removeAttribute("class"),isKey(a)&&lineNodes.key?lineNodes.key.removeAttribute("class"):!isKey(a)&&lineNodes.value&&lineNodes.value.removeAttribute("class"),a.id){var b=a.id.substring(a.id.length-1),c="l"+b,d="v"+b;byId(c)&&byId(c).parentNode.removeChild(byId(c)),byId(d)&&byId(d).removeAttribute("id")}if(isKey(a)?lineNodes.key=a:lineNodes.value=a,lineNodes.key&&lineNodes.value){var e=pairsInUse[lineNodes.key.id];e.setValue(lineNodes.value.innerHTML),e.drawLine(byId("pair-list"),makeVisualConnection(lineNodes.key,lineNodes.value)),setTimeout(function(){clearClass("selected")},300),lineNodes=[]}}function checkPairs(){var a=byClassName("line");if(a.length+correct>=minPairsGenerated){lineNodes=[];for(var b=mistakes,c=a.length+correct%4-1;c>=0;c--)"correct"!==pairsInUse["k"+c].keyNode.className&&(pairsInUse["k"+c].check()?correct++:mistakes++);for(var d=byId("rightcol"),c=0;c<d.childNodes.length;c++)d.childNodes[c].removeAttribute("id");b===mistakes?setTimeout(function(){removeAllChildren("pair-list"),generatePairs()},1e3):setTimeout(function(){clearClass("mistake")},1e3),removeTagWithClass("line")}else message("Please connect all bubbles.")}function generatePairs(){var a=minPairsGenerated,b=[],c=pairDatabase.length-indexesUsed.length,d=byId("startbutton"),e=(byId("checkbutton"),[]);d.style.display="none",pairsInUse=[],a>c&&(a=c),c||(displayScore(),d.style.display="inline-block",d.innerHTML="start over",indexesUsed=[]),indexesFromDB=randomIndexesFromDB(a,pairDatabase,indexesUsed),pairsInUse=pairArrayFromIndexes(indexesFromDB,pairDatabase),indexesUsed.concat(indexesFromDB);for(var f=0;f<pairsInUse.length;f++)b.push(pairsInUse[f].valueNode);for(shuffleArray(b),f=0;a>f;f++){var g=pairsInUse[f].keyNode,h=b[f];g.id="k"+f,e[g.id]=pairsInUse[f],byId("leftcol").appendChild(g),byId("rightcol").appendChild(h)}pairsInUse=e}var pairDatabase=[["Logen","Nine-fingers"],["Thorin","Oakenshield"],["Kvothe","Kote"],["Master","Elodin"],["Jon","Snow"],["Tywin","Lannister"],["Euron","Greyjoy"],["Daenarys","Targaryen"]],minPairsGenerated=4,pairsInUse=[],indexesUsed=[],lineNodes=[],mistakes=0,correct=0;document.addEventListener("DOMContentLoaded",init);
//# sourceMappingURL=application.min.js.map